name: ci

on:
  push:
    # Branches that sound like default
    branches:
      - master
      - crates-io
    tags:
      - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
    # Don't run tests, when only textfiles were modified
    paths-ignore:
      - "COPYRIGHT"
      - "LICENSE-*"
      - "**.md"
      - "**.txt"
  pull_request:
    branches:
      - master
      - crates-io
    paths-ignore:
      - "COPYRIGHT"
      - "LICENSE-*"
      - "**.md"
      - "**.txt"

jobs:
  style:
    name: Code format and lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  build_and_test:
    name: Unit tests
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib
  create-release:
    # create release on tags
    if: startsWith(github.ref, 'refs/tags/')
    # once unit tests have passed
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
  upload-assets:
    name: Upload binary on ${{ matrix.os }}
    needs: create-release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: maud-lsp
          # (optional) On which platform to distribute the `.tar.gz` file.
          # [default value: unix]
          # [possible values: all, unix, windows, none]
          tar: unix
          # (optional) On which platform to distribute the `.zip` file.
          # [default value: windows]
          # [possible values: all, unix, windows, none]
          zip: windows
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
